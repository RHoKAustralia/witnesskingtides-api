{
  "method": {
    "name": "flickr.photos.comments.editComment",
    "needslogin": 1,
    "needssigning": 1,
    "requiredperms": "2",
    "description": {
      "_content": "Edit the text of a comment as the currently authenticated user."
    }
  },
  "arguments": {
    "argument": [
      {
        "name": "api_key",
        "optional": 0,
        "_content": "Your API application key. <a href=\"/services/api/misc.api_keys.html\">See here</a> for more details."
      },
      {
        "name": "comment_id",
        "optional": "0",
        "_content": "The id of the comment to edit."
      },
      {
        "name": "comment_text",
        "optional": "0",
        "_content": "Update the comment to this text."
      },
      {
        "name": "use_text_for_links",
        "optional": "1",
        "_content": "Use text for links"
      },
      {
        "name": "expand_bbml",
        "optional": "1",
        "_content": "Expand bbml"
      },
      {
        "name": "full_result",
        "optional": "1",
        "_content": "If the caller wants the full result to be returned (as flickr.photos.comments.getComment), then this parameter should be passed in as 1."
      },
      {
        "name": "secure_image_embeds",
        "optional": "1",
        "_content": "This argument will secure the external image embeds in all the markup and return a secure<Field> back in addition to the <Field>"
      },
      {
        "name": "bbml_need_all_photo_sizes",
        "optional": "1",
        "_content": "If the API needs all photo sizes added as attributes to the bbml. Use this with expand_bbml, but dont use it with use_text_for_links. Also when you give this one, you can specify primary_photo_longest_dimension or a default of 240 will be assumed"
      },
      {
        "name": "primary_photo_longest_dimension",
        "optional": "1",
        "_content": "When used with bbml_need_all_photo_sizes, it specifies the maximum dimension of width and height to be used as the <img src /> url"
      },
      {
        "name": "external_images_minimal",
        "optional": "1",
        "_content": "When passed as 1, the external image embeds are minimal and not the big BBML code thats returned otherwise. "
      }
    ]
  },
  "errors": {
    "error": [
      {
        "code": "1",
        "message": "Photo not found.",
        "_content": "The requested comment is against a photo which no longer exists."
      },
      {
        "code": "2",
        "message": "Comment not found.",
        "_content": "The comment id passed was not a valid comment id"
      },
      {
        "code": "8",
        "message": "Blank comment.",
        "_content": "Comment text can not be blank"
      },
      {
        "code": 95,
        "message": "SSL is required",
        "_content": "SSL is required to access the Flickr API."
      },
      {
        "code": 96,
        "message": "Invalid signature",
        "_content": "The passed signature was invalid."
      },
      {
        "code": 97,
        "message": "Missing signature",
        "_content": "The call required signing but no signature was sent."
      },
      {
        "code": 98,
        "message": "Login failed / Invalid auth token",
        "_content": "The login details or auth token passed were invalid."
      },
      {
        "code": 99,
        "message": "User not logged in / Insufficient permissions",
        "_content": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
      },
      {
        "code": 100,
        "message": "Invalid API Key",
        "_content": "The API key passed was not valid or has expired."
      },
      {
        "code": 105,
        "message": "Service currently unavailable",
        "_content": "The requested service is temporarily unavailable."
      },
      {
        "code": 106,
        "message": "Write operation failed",
        "_content": "The requested operation failed due to a temporary issue."
      },
      {
        "code": 111,
        "message": "Format \"xxx\" not found",
        "_content": "The requested response format was not found."
      },
      {
        "code": 112,
        "message": "Method \"xxx\" not found",
        "_content": "The requested method was not found."
      },
      {
        "code": 114,
        "message": "Invalid SOAP envelope",
        "_content": "The SOAP envelope send in the request could not be parsed."
      },
      {
        "code": 115,
        "message": "Invalid XML-RPC Method Call",
        "_content": "The XML-RPC request document could not be parsed."
      },
      {
        "code": 116,
        "message": "Bad URL found",
        "_content": "One or more arguments contained a URL that has been used for abuse on Flickr."
      }
    ]
  },
  "stat": "ok"
}